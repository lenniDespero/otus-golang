version: "3.5"
services:
  database:
    container_name: ${DB_HOST}
    image: postgres:12.1
    ports:
      - "5435:5432"
    restart: always
    volumes:
      - ./res/db:/docker-entrypoint-initdb.d:ro
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    env_file:
      - ./.env
    networks:
      - otus-network
  rabbit:
    container_name: ${AMPQ_HOST}
    image: rabbitmq:3.8-management
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${AMPQ_USER}
      RABBITMQ_DEFAULT_PASS: ${AMPQ_PASSWORD}
    env_file:
      - ./.env
    networks:
      - otus-network
  api:
    build:
      context: ..
      dockerfile: ./deployment/api/Dockerfile
    container_name: ${API_NAME}
    ports:
      - 8888:${HTTP_PORT}
    networks:
      - otus-network
    depends_on:
      - database
    env_file:
      - ./.env
    restart: on-failure
#    tty: true
  notifier:
    build:
      context: ..
      dockerfile: ./deployment/notifier/Dockerfile
    container_name: ${NOTIFIER_NAME}
    networks:
      - otus-network
    depends_on:
      - rabbit
    env_file:
      - ./.env
    restart: on-failure
  scheduler:
    container_name: ${SCHEDULER_NAME}
    build:
      context: ..
      dockerfile: ./deployment/scheduler/Dockerfil—É
    networks:
      - otus-network
    env_file:
      - ./.env
    depends_on:
      - rabbit
      - database
    restart: on-failure
networks:
  otus-network:
    name: otus-network